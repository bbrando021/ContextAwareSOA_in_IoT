<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"><!--XML Schema for the architecture of the Thing-->
	<xsd:element name="Thing">
		<xsd:complexType>
			<xsd:sequence><!--OBJECT-->
				<xsd:element name="Object">
					<xsd:complexType>
						<xsd:sequence><!--a functional requirement is any requirement which specifies what the system should do.-->
							<xsd:element name="FunctionalProperties">
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="objectName" type="xsd:string"/>
										<xsd:element name="brand" type="xsd:string"/>
										<xsd:element name="model" type="xsd:string"/>
										<xsd:element name="objectDescription" type="xsd:string"/>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element><!--non-functional requirement will describe how a system should behave and what limits there are on its functionality.-->
							<xsd:element name="Non-FunctionalProperties">
								<xsd:complexType>
									<xsd:sequence><!--Can be dynamic or static, will consist of user defined elements such as location, 
									and other context that uniquely defines a specific object-->
										<xsd:element name="contextOfObject">
											<xsd:complexType>
												<xsd:sequence>
													<xsd:sequence minOccurs="0" maxOccurs="unbounded">
														<xsd:element name="tag" type="xsd:string"/>
														<xsd:element name="description" type="xsd:string"/>
													</xsd:sequence>
												</xsd:sequence>
											</xsd:complexType>
										</xsd:element><!--These are properties of the Thing, these will never change-->
										<xsd:element name="propertiesOfObject">
											<xsd:complexType>
												<xsd:sequence>
													<xsd:sequence minOccurs="0" maxOccurs="unbounded">
														<xsd:element name="tag" type="xsd:string"/>
														<xsd:element name="description" type="xsd:string"/>
													</xsd:sequence>
												</xsd:sequence>
											</xsd:complexType>
										</xsd:element>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element><!--SERVICE-->
				<xsd:element name="Service">
					<xsd:complexType>
						<xsd:sequence><!--a functional requirement is any requirement which specifies what the system should do.-->
							<xsd:element name="FunctionalProperties" minOccurs="0">
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="serviceName" minOccurs="0" type="xsd:string"/>
										<xsd:element name="serviceDescription" minOccurs="0" type="xsd:string"/>
										<xsd:element name="input" minOccurs="0">
											<xsd:complexType>
												<xsd:sequence>
													<xsd:sequence minOccurs="0" maxOccurs="unbounded">
														<xsd:element name="name" type="xsd:string"/>
														<xsd:element name="type" type="xsd:string"/>
													</xsd:sequence>
												</xsd:sequence>
											</xsd:complexType>
										</xsd:element>
										<xsd:element name="output" minOccurs="0" type="xsd:string"/>
										<xsd:element name="exampleOutput" minOccurs="0" type="xsd:string"/>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element><!--non-functional requirement will describe how a system should behave and what limits there are on its functionality.-->
							<xsd:element name="Non-FunctionalProperties" minOccurs="0">
								<xsd:complexType>
									<xsd:sequence><!--How much will one use, or multiple uses of this service cost-->
										<xsd:element name="cost" minOccurs="0" type="xsd:decimal"/><!--Can be dynamic or static, will consist of user defined elements such as location, 
									and other context that uniquely defines a specific service-->
										<xsd:element name="contextOfService" minOccurs="0">
											<xsd:complexType>
												<xsd:sequence>
													<xsd:sequence minOccurs="0" maxOccurs="unbounded">
														<xsd:element name="tag" type="xsd:string"/>
														<xsd:element name="description" type="xsd:string"/>
													</xsd:sequence>
												</xsd:sequence>
											</xsd:complexType>
										</xsd:element><!--These are properties of the Service, these will never change-->
										<xsd:element name="propertiesOfService" minOccurs="0">
											<xsd:complexType>
												<xsd:sequence>
													<xsd:sequence minOccurs="0" maxOccurs="unbounded">
														<xsd:element name="tag" type="xsd:string"/>
														<xsd:element name="description" type="xsd:string"/>
													</xsd:sequence>
												</xsd:sequence>
											</xsd:complexType>
										</xsd:element>
										<xsd:element name="constraints">
											<xsd:complexType>
												<xsd:sequence><!--Can this service utilize other services to complete more complex requests--><!--XXXXXXXX-->
													<xsd:element name="interoperability" minOccurs="0">
														<xsd:complexType>
															<xsd:sequence>
																<xsd:element name="boolean" type="xsd:boolean"/>
																<xsd:element name="otherServiceName" type="xsd:string"/>
															</xsd:sequence>
														</xsd:complexType>
													</xsd:element><!--How secure is the data that is being used and manipulated--><!--XXXXXXXX-->
													<xsd:element name="security" minOccurs="0" type="xsd:string"/><!--Can this service scale to handle multiple requests,the ability of this service to handle growth efficiently--><!--XXXXXXXX-->
													<xsd:element name="scalability" minOccurs="0" type="xsd:integer"/>
														<!--Describes how fast, accurate, etc this service is--><!--XXXXXXXX-->
													<xsd:element name="performance" minOccurs="0">
														<xsd:complexType>
															<xsd:sequence>
																<xsd:element name="time" type="xsd:decimal"/>
																<xsd:element name="units" type="xsd:string"/>
															</xsd:sequence>
														</xsd:complexType>
													</xsd:element>
													<!--When is this service available. Should be calculated using this formula: 
												(MeanTimeBetweenFailure / MTBF + MeanTimeToRecovery) * 100    
												MTBF is (Hours / Failure Count) ... MTTR is (Repair Hours / Failure Counts)-->
													<xsd:element name="availability" minOccurs="0" type="xsd:decimal"/><!--How and where will the requester gain access to this service-->
													<xsd:element name="accessibility" minOccurs="0" type="xsd:string"/>
												</xsd:sequence>
											</xsd:complexType>
										</xsd:element>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element><!--SEARCH AND MATCHING TAGS-->
				<xsd:element name="searchTags">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="tag" minOccurs="0" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>
